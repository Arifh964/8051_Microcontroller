C51 COMPILER V9.54   RTC_DS1307                                                            09/14/2022 13:50:40 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE RTC_DS1307
OBJECT MODULE PLACED IN .\Objects\RTC_DS1307.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE RTC_DS1307.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listing
                    -s\RTC_DS1307.lst) TABS(2) OBJECT(.\Objects\RTC_DS1307.obj)

line level    source

   1          #include <REG52.h> 
   2          #include "LCD8bit.h"
   3          #include "I2C.h"
   4          #include "delay.h"
   5          
   6          int i;
   7          unsigned char sec[2],min[2],hour[2],dow=0,dom[2],month[2],year[2];
   8          unsigned int a[7];
   9          typedef enum { false, true } bool;  
  10          int Dec_To_BCD(int dec)
  11            {
  12   1            return( (dec/10*16) + (dec%10) );
  13   1        }
  14          void readAllReg()
  15              {
  16   1      I2CStart(); 
  17   1      I2CSend(0xD0);  
  18   1      I2CSend(0x00);  
  19   1      I2CStart(); 
  20   1      I2CSend(0xD1);
  21   1      for (i = 0; i < 8; i++) {
  22   2      
  23   2        a[i] = I2CRead();
  24   2       
  25   2        if(i == 7)
  26   2          I2CNak();
  27   2        else
  28   2          I2CAck();
  29   2      }
  30   1      I2CStop();    
  31   1          }
  32              
  33          void setTime(int Sec, int Min, int Hour,int Dow, int Dom, int Month, int Year)
  34          {
  35   1      I2CStart(); 
  36   1      I2CSend(0xD0);  
  37   1      I2CSend(0x00);  
  38   1      I2CSend(Dec_To_BCD(Sec)&0x7f);
  39   1      I2CSend(Dec_To_BCD(Min)&0x7f);
  40   1      I2CSend(Dec_To_BCD(Hour)&0x3f);
  41   1      I2CSend(Dec_To_BCD(Dow)&0x07);
  42   1      I2CSend(Dec_To_BCD(Dom)&0x3f);
  43   1      I2CSend(Dec_To_BCD(Month)&0x1f);
  44   1      I2CSend(Dec_To_BCD(Year)&0xff);
  45   1      I2CStop();
  46   1      } 
  47          
  48          int readSecReg()
  49          {
  50   1      I2CStart(); 
  51   1      I2CSend(0xD0);  
  52   1      I2CSend(0x00);  
  53   1      I2CStart(); 
  54   1      I2CSend(0xD1);
C51 COMPILER V9.54   RTC_DS1307                                                            09/14/2022 13:50:40 PAGE 2   

  55   1      a[0] = I2CRead();
  56   1      I2CNak();
  57   1      I2CStop();
  58   1      return(a[0]);
  59   1      } 
  60          
  61          void displayTime()
  62          {
  63   1      int SEC=0;
  64   1      int AM_PM=0;  
  65   1        
  66   1        Cmd(0x01);
  67   1        Cmd(0x80);
  68   1        readAllReg();
  69   1      
  70   1      a[0]=(a[0]&0x0f)+(((a[0]>>4)&0x07)*10);
  71   1      sec[0]=(a[0]/10)+48;sec[1]=(a[0]%10)+48;
  72   1      a[1]=(a[1]&0x0f)+(((a[1]>>4)&0x07)*10);
  73   1      min[0]=a[1]/10+48;min[1]=a[1]%10+48;
  74   1      a[2]=((a[2]&0x0f))+(((a[2]>>4)&0x03)*10);
  75   1      if(a[2]>12){
  76   2      AM_PM=a[2]-12;  
  77   2      hour[0]=AM_PM/10+48;hour[1]=AM_PM%10+48;}
  78   1      else{
  79   2      hour[0]=a[2]/10+48;hour[1]=a[2]%10+48;}
  80   1      a[3]=(a[3]&0x07);dow=a[3];
  81   1      a[4]=(a[4]&0x0f)+(((a[4]>>4)&0x03)*10);
  82   1      dom[0]=a[4]/10+48;dom[1]=a[4]%10+48;
  83   1      a[5]=(a[5]&0x0f)+(((a[5]>>4)&0x01)*10);
  84   1      month[0]=a[5]/10+48;month[1]=a[5]%10+48;
  85   1      a[6]=(a[6]&0x0f)+(((a[6]>>4)&0x0f)*10);
  86   1      year[0]=a[6]/10+48;year[1]=a[6]%10+48;
  87   1      
  88   1      
  89   1      Data(hour[0]);Data(hour[1]);Data(':');
  90   1      Data(min[0]);Data(min[1]);Data(':');
  91   1      Data(sec[0]);Data(sec[1]);Data(' ');
  92   1      if(a[2]<12) Disp("AM"); else Disp("PM");
  93   1      
  94   1      Cmd(0xc0);
  95   1      Data(dom[0]);Data(dom[1]);Data('/');
  96   1      Data(month[0]);Data(month[1]);Data('/');
  97   1      Data(year[0]);Data(year[1]);Data(' ');
  98   1      switch(dow)
  99   1            {
 100   2            case 1:Disp("Sunday");break;
 101   2            case 2:Disp("Monday");break;
 102   2            case 3:Disp("Tuesday");break;
 103   2            case 4:Disp("Wednesday");break;
 104   2            case 5:Disp("Thursday");break;
 105   2            case 6:Disp("Friday");break;
 106   2            case 7:Disp("Saturday");break;    
 107   2            }
 108   1      while(a[0]<59)
 109   1      {
 110   2        setCursor(6,0);
 111   2        readSecReg();
 112   2        a[0]=(a[0]&0x0f)+(((a[0]>>4)&0x07)*10);
 113   2        sec[0]=(a[0]/10)+48;sec[1]=(a[0]%10)+48;
 114   2        if(SEC!=a[0]){
 115   3        Data(sec[0]);Data(sec[1]);SEC=a[0];}
 116   2        Delay_ms(100);  
C51 COMPILER V9.54   RTC_DS1307                                                            09/14/2022 13:50:40 PAGE 3   

 117   2      }
 118   1      Delay_ms(1000);   
 119   1      }
 120          void main()
 121          {
 122   1        P0=0xFF;
 123   1        initializeLCD();
 124   1        setTime(55,59,11,3,18,7,17); 
 125   1        while(1)
 126   1          {
 127   2            displayTime();
 128   2          } 
 129   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1669    ----
   CONSTANT SIZE    =     63    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     29      28
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
